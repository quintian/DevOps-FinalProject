services:
  jenkins:
    container_name: jenkins
    build:
      context: .
      dockerfile: jenkins_dockerfile
    user: root
    privileged: true
    ports:
      - "8080:8080"
      - "50000:50000"
      - "8082:8082" # For spring-petclinic app
      - "8084:8084" # For OWASP-ZAP exposure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Mount Docker socket
    networks:
      dev-network:
        ipv4_address: 192.168.1.2
    entrypoint: ["/bin/sh", "-c" , "sudo service docker start && /usr/bin/tini -- /usr/local/bin/jenkins.sh "]

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - db
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    networks:
      dev-network:
        ipv4_address: 192.168.1.3

  db:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    networks:
      dev-network:
        ipv4_address: 192.168.1.7


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      dev-network:
        ipv4_address: 192.168.1.4

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      dev-network:
        ipv4_address: 192.168.1.5

  owasp-zap:
    image: zaproxy/zap-weekly
    container_name: owasp-zap
    entrypoint: ["zap.sh", "-daemon", "-host", "0.0.0.0", "-port", "8081"]
    ports:
      - "8081:8081"
    networks:
      dev-network:
        ipv4_address: 192.168.1.6
    healthcheck:
      test: ["CMD", "zap-cli", "status", "-t", "60"]
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 30s

networks:
  dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
